name: icons

on:
  schedule:
    # only on weekday, at 1:00 UTC ( 10:00 JST )
    - cron: '0 1 * * 1-5'

  workflow_dispatch:

jobs:
  icons:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn-2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Prepare deps
        run: |
          yarn install --immutable --inline-builds
          yarn workspaces foreach -vptR --from @charcoal-ui/icons-cli run build

      - name: Export
        env:
          FIGMA_FILE_URL: ${{ secrets.FIGMA_FILE_URL }}
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
          OUTPUT_ROOT_DIR: ${{ secrets.OUTPUT_ROOT_DIR }}
        run: yarn icons-cli figma:export

      - name: Optimize
        run: ./misc/icons-cli-optimize.sh

      - name: Generate github token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.CHARCOAL_BOT_APP_ID }}
          private_key: ${{ secrets.CHARCOAL_BOT_PRIVATE_KEY }}

      - name: Create a Pull Request
        env:
          GITHUB_ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
          GITHUB_REPO_OWNER: pixiv
          GITHUB_REPO_NAME: charcoal
          GITHUB_DEFAULT_BRANCH: main
        run: yarn icons-cli github:pr
